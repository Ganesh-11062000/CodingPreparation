optimal sub-structure:
- A given problems has Optimal Substructure Property if optimal solution of the given problem can be obtained by using optimal solutions of its subproblems.

overlapping subproblem:
- In dynamic programming, computed solutions to subproblems are stored in a table so that these donâ€™t have to be recomputed

Steps to solve a DP
if we have recursive solution 
check the parameters which are changing and make a dp array of of those many dimensions.

If trying for direct dp solution-
- get the dp relation
- find the base cases
- write a for loop to calculate in bottom up approach.


1-d problems are quite easy
try out 2d problems

nCr = (n-r+1)(n-r+2)...(n - r - (r))/r!

= (n-r-1)*(n-r-2)*(n-r-3)
	1	 *	 2	 *   3


def nCr(n,r):
	p = 1
	k = 1

	if (n-r < r):
		r = n-r

	if r == 0:
		return 1
	else:
		while (r != 0):
			p *= n
			k *= r

			m = gcd(p,k)

			p = p//m
			k = k//m

			n -= 1
			r -= 1

		return p


